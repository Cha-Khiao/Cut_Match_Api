{ "openapi": "3.0.3", "info": { "title": "Supabase Example API", "version": "1.0.0", "description": "Comprehensive OpenAPI specification for a typical Supabase project: Auth, Profiles, Storage. Customize schemas/paths to match your DB." }, "servers": [ { "url": "https://api.example.com", "description": "Production server (replace with your SUPABASE URL)" }, { "url": "http://localhost:54321", "description": "Local Supabase (replace if different)" } ], "components": { "securitySchemes": { "bearerAuth": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" }, "apiKeyAuth": { "type": "apiKey", "in": "header", "name": "apikey" } }, "schemas": { "AuthSignUp": { "type": "object", "properties": { "email": { "type": "string", "format": "email" }, "password": { "type": "string" } }, "required": ["email", "password"] }, "AuthSignIn": { "type": "object", "properties": { "email": { "type": "string", "format": "email" }, "password": { "type": "string" } }, "required": ["email", "password"] }, "AuthResponse": { "type": "object", "properties": { "access_token": { "type": "string" }, "refresh_token": { "type": "string" }, "expires_in": { "type": "integer" }, "token_type": { "type": "string" } } }, "Profile": { "type": "object", "properties": { "id": { "type": "integer", "format": "int64", "description": "Primary key (bigint)" }, "user_id": { "type": "string", "format": "uuid", "description": "Reference to auth.users.id" }, "full_name": { "type": "string" }, "bio": { "type": "string" }, "avatar_url": { "type": "string", "format": "uri" }, "created_at": { "type": "string", "format": "date-time" }, "updated_at": { "type": "string", "format": "date-time" } }, "required": ["user_id"] }, "StorageObject": { "type": "object", "properties": { "name": { "type": "string" }, "bucket_id": { "type": "string" }, "owner": { "type": "string", "format": "uuid" }, "updated_at": { "type": "string", "format": "date-time" }, "created_at": { "type": "string", "format": "date-time" }, "public_url": { "type": "string", "format": "uri" } } }, "Error": { "type": "object", "properties": { "message": { "type": "string" }, "status": { "type": "integer" } } } } }, "security": [ { "bearerAuth": [] } ], "paths": { "/auth/signup": { "post": { "summary": "Sign up a new user", "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthSignUp" } } } }, "responses": { "200": { "description": "Sign up successful (returns auth tokens or user info)", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthResponse" } } } }, "400": { "description": "Validation error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } } }, "/auth/signin": { "post": { "summary": "Sign in (email + password)", "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthSignIn" } } } }, "responses": { "200": { "description": "Authentication successful", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthResponse" } } } }, "401": { "description": "Invalid credentials", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } } }, "/auth/refresh": { "post": { "summary": "Refresh access token", "requestBody": { "required": true, "content": { "application/json": { "schema": { "type": "object", "properties": { "refresh_token": { "type": "string" } }, "required": ["refresh_token"] } } } }, "responses": { "200": { "description": "New tokens", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthResponse" } } } }, "401": { "description": "Invalid refresh token", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } } }, "/profiles": { "get": { "summary": "List profiles", "security": [{ "bearerAuth": [] }], "responses": { "200": { "description": "A list of profiles", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Profile" } } } } }, "401": { "description": "Unauthorized", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } }, "post": { "summary": "Create profile", "security": [{ "bearerAuth": [] }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Profile" } } } }, "responses": { "201": { "description": "Profile created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Profile" } } } }, "400": { "description": "Validation error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } } }, "/profiles/{id}": { "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "integer", "format": "int64" } } ], "get": { "summary": "Get profile by id", "security": [{ "bearerAuth": [] }], "responses": { "200": { "description": "Profile found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Profile" } } } }, "404": { "description": "Not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } }, "put": { "summary": "Update profile", "security": [{ "bearerAuth": [] }], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Profile" } } } }, "responses": { "200": { "description": "Profile updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Profile" } } } }, "403": { "description": "Forbidden", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } }, "delete": { "summary": "Delete profile", "security": [{ "bearerAuth": [] }], "responses": { "204": { "description": "Profile deleted (no content)" }, "403": { "description": "Forbidden", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } } }, "/storage/buckets": { "get": { "summary": "List storage buckets", "security": [{ "apiKeyAuth": [] }], "responses": { "200": { "description": "Buckets list", "content": { "application/json": { "schema": { "type": "array", "items": { "type": "object" } } } } }, "401": { "description": "Unauthorized", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } } }, "/storage/{bucket}/objects": { "parameters": [ { "name": "bucket", "in": "path", "required": true, "schema": { "type": "string" } } ], "get": { "summary": "List objects in bucket", "security": [{ "apiKeyAuth": [] }], "responses": { "200": { "description": "Objects list", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/StorageObject" } } } } } } }, "post": { "summary": "Upload object (multipart/form-data)", "security": [{ "apiKeyAuth": [] }], "requestBody": { "required": true, "content": { "multipart/form-data": { "schema": { "type": "object", "properties": { "file": { "type": "string", "format": "binary" }, "upsert": { "type": "boolean" } }, "required": ["file"] } } } }, "responses": { "200": { "description": "Upload result", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StorageObject" } } } } } } }, "/storage/{bucket}/objects/{objectName}": { "parameters": [ { "name": "bucket", "in": "path", "required": true, "schema": { "type": "string" } }, { "name": "objectName", "in": "path", "required": true, "schema": { "type": "string" } } ], "get": { "summary": "Get object metadata / public URL", "security": [{ "apiKeyAuth": [] }], "responses": { "200": { "description": "Object metadata", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StorageObject" } } } }, "404": { "description": "Not found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } }, "delete": { "summary": "Delete object", "security": [{ "apiKeyAuth": [] }], "responses": { "204": { "description": "Deleted" }, "403": { "description": "Forbidden", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Error" } } } } } } } } }